# This file is used to configure your project.
# Read more about the various options under:
# http://setuptools.readthedocs.io/en/latest/setuptools.html#configuring-setup-using-setup-cfg-files

[metadata]
name = pyaleph
description = Reference implementation of Aleph.im next generation network of decentralized big data applications.
author = Moshe Malawach
author_email = moshe.malawach@protonmail.com
license = mit
url = https://aleph.im
long_description = file: README.md
long_description_content_type = text/markdown
# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any
# Add here all kinds of additional classifiers as defined under
# https://pypi.python.org/pypi?%3Aaction=list_classifiers
classifiers =
    Development Status :: 4 - Beta
    Programming Language :: Python

[options]
zip_safe = False
packages = find:
include_package_data = True
package_dir =
    =src
# DON'T CHANGE THE FOLLOWING LINE! IT WILL BE UPDATED BY PYSCAFFOLD!
setup_requires =
      pyscaffold>=3.1a0,<3.2a0
      pytest-runner>=2.0,<3dev

# Note: eth/web3 dependencies updates are sensitive and can trigger a lot of dependency conflicts.
# Update with care. Dependencies that were added to make it all work are annotated accordingly.
install_requires =
    aio_pika==9.1.3
    aiocache==0.11.1
    aiohttp-cors==0.7.0
    aiohttp-jinja2==1.5
    aiohttp==3.8.4
    aioipfs@git+https://github.com/aleph-im/aioipfs.git@d671c79b2871bb4d6c8877ba1e7f3ffbe7d20b71
    alembic==1.12.1
    aleph-message==0.4.0
    aleph-p2p-client@git+https://github.com/aleph-im/p2p-service-client-python@2c04af39c566217f629fd89505ffc3270fba8676
    aleph-pytezos@git+https://github.com/aleph-im/aleph-pytezos.git@32dd1749a4773da494275709060632cbeba9a51b
    asyncpg==0.26.0
    base58>=1.0.3
    coincurve==15.0.1
    configmanager==1.35.1
    configparser==5.2.0
    cosmospy==6.0.0
    dataclasses_json==0.6.1
    eth_account==0.8.0
    gunicorn==20.1.0
    hexbytes==0.2.2
    msgpack==1.0.3  # required by aiocache
    multiaddr==0.0.9    # for libp2p-stubs
    aleph-nuls2==0.1.0
    orjson>=3.7.7   # Minimum version for Python 3.11
    psycopg2-binary==2.9.5  # Note: psycopg3 is not yet supported by SQLAlchemy
    pycryptodome==3.17.0  # for libp2p-stubs
    pymultihash==0.8.2  # for libp2p-stubs
    pynacl==1.5.0
    python-dateutil==2.8.2
    pytz==2021.3
    pyyaml==6.0
    redis[hiredis]==4.5.4
    requests==2.28.1
    secp256k1==0.14.0
    sentry-sdk==1.16.0
    setproctitle==1.2.2
    sqlalchemy[mypy]==1.4.41
    sqlalchemy-utils==0.38.3
    substrate-interface==1.3.4
    ujson==5.1.0  # required by aiocache
    urllib3==1.26.11
    uvloop==0.17.0
    web3==6.2.0

dependency_links =
    https://github.com/aleph-im/py-libp2p/tarball/0.1.4-1-use-set#egg=libp2p
    https://github.com/aleph-im/aioipfs/tarball/hoh-more-exceptions#egg=aioipfs

# The usage of test_requires is discouraged, see `Dependency Management` docs
# tests_require = pytest; pytest-cov
# Require a specific Python version, e.g. Python 2.7 or >= 3.4
# python_requires = >=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*

[options.packages.find]
where = src
exclude =
    tests

[options.extras_require]
# Add here additional requirements for extra features, to install with:
# `pip install pyaleph[PDF]` like:
# PDF = ReportLab; RXP
# Add here test requirements (semicolon/line-separated)
testing =
    ipfshttpclient==0.8.0a2  # eth/web3 test dependency, for some reason
    more-itertools==8.14.0
    mypy==1.2.0
    pytest
    pytest-cov
    pytest-aiohttp
    pytest-asyncio
    pytest-mock
    types-pytz
    types-redis
    types-requests
    types-setuptools
nuls2 =
    aleph-nuls2==0.1.0
    py-ed25519-bindings==1.0.2  # Python 3.11
polkadot =
    substrate-interface>=0.9.27
cosmos =
    cosmospy
docs =
    sphinxcontrib-plantuml

[options.entry_points]
# Add here console scripts like:
console_scripts =
   pyaleph = aleph.commands:run
# For example:
# console_scripts =
#     fibonacci = pyaleph.skeleton:run
# And any other entry points, for example:
# pyscaffold.cli =
#     awesome = pyscaffoldext.awesome.extension:AwesomeExtension

[test]
# py.test options when running `python setup.py test`
# addopts = --verbose
extras = True

[tool:pytest]
# Options for py.test:
# Specify command line options as you would do when invoking py.test directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
# --cov aleph --cov-report term-missing
addopts =
    --disable-pytest-warnings
    --verbose
norecursedirs =
    dist
    build
    .tox
testpaths = tests

[aliases]
build = bdist_wheel
release = build upload

[bdist_wheel]
# Use this option if your package is pure-python
universal = 1

[build_sphinx]
source_dir = docs
build_dir = docs/_build

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no-vcs = 1
formats = bdist_wheel

[flake8]
# Some sane defaults for the code style checker flake8
exclude =
    .tox
    build
    dist
    .eggs
    docs/conf.py

[pyscaffold]
# PyScaffold's parameters when the project was created.
# This will be used when updating. Do not change!
version = 3.1
package = aleph
extensions =
    markdown
